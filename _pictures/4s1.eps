%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 10.0
%%For: (ACER) (-)
%%Title: (4s1.eps)
%%CreationDate: 8/13/2006 2:21 PM
%%BoundingBox: 19 748 128 823
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 12 12 580 828
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -13 12
%AI7_GridSettings: 28.3465 10 28.3465 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.6 0.1412 0.9373 0.0275 k
 0.6 0.1412 0.9373 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4941 0.3529 0.9529 0.2 k
 0.4941 0.3529 0.9529 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k
 0.1882 0.1098 0.9059 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k
 0.9216 0.2157 0.9451 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 21.3906 m
64.0161 7.9009 L
52.3345 1.1543 L
40.6475 7.9009 L
40.6475 21.3906 L
52.3345 28.1372 L
64.0161 21.3906 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 21.394 m
37.479 7.9014 L
25.7944 1.1548 L
14.1099 7.9014 L
14.1099 21.3911 L
25.7944 28.1406 L
37.479 21.394 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d24.3691 44.0386 m
24.3691 30.5459 L
12.6846 23.7993 L
1 30.5459 L
1 44.0356 L
12.6846 50.7852 L
24.3691 44.0386 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d77.2871 44.3774 m
77.2871 30.8843 L
65.603 24.1382 L
53.9185 30.8843 L
53.9185 44.3765 L
65.603 51.1226 L
77.2871 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d50.7471 44.3774 m
50.7471 30.8843 L
39.0649 24.1382 L
27.3774 30.8843 L
27.3774 44.3765 L
39.0649 51.1235 L
50.7471 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 67.3599 m
37.479 53.8682 L
25.7944 47.1221 L
14.1099 53.8682 L
14.1099 67.3599 L
25.7944 74.1074 L
37.479 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 67.3599 m
64.0161 53.8682 L
52.3345 47.1221 L
40.6475 53.8682 L
40.6475 67.3599 L
52.3345 74.1074 L
64.0161 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 1 0 1 0 k
 1 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.3451 0 0.6863 0 k
 0.3451 0 0.6863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.9725 0.9451 0 0 k
 0.9725 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 J 0 j 1 w 4 M []0 d74.9795 814.0942 m
71.2778 810.355 L
72.4878 810.5225 73.7236 810.6138 74.9795 810.6138 C
74.9795 814.0942 L
n0 R
0 0 0 1 K
0.25 w74.9795 796.4106 m
74.9795 796.9155 L
74.5049 796.4355 L
74.6611 796.4219 74.8223 796.4204 74.9795 796.4106 C
s49.2446 788.1006 m
49.5142 790.9131 50.2783 793.5898 51.4497 796.0542 C
40.8823 785.3809 L
46.5522 785.3809 L
49.2446 788.1006 L
s35.2134 785.3809 m
53.4316 803.7822 L
52.1992 803.9565 50.8999 804.064 49.4951 804.0601 c
48.9858 804.0591 48.4878 804.0454 48 804.0215 C
29.5444 785.3809 L
35.2134 785.3809 L
s29.5444 785.3809 m
48 804.0215 L
45.4058 803.896 43.1167 803.4541 41.0977 802.7773 C
29.2876 790.8486 L
28.7129 788.9849 28.4521 787.1162 28.4585 785.3809 C
29.5444 785.3809 L
s40.8823 785.3809 m
51.4497 796.0542 L
52.707 798.6997 54.4326 801.0981 56.5283 803.1504 C
55.5483 803.4106 54.522 803.6279 53.4316 803.7822 C
35.2134 785.3809 L
40.8823 785.3809 L
s29.2876 790.8486 m
41.0977 802.7773 L
34.4507 800.5483 30.7925 795.7256 29.2876 790.8486 C
s49.2446 788.1006 m
46.5522 785.3809 L
49.1426 785.3809 L
49.1396 785.5273 49.1309 785.6729 49.1309 785.8198 c
49.1309 786.5889 49.1729 787.3486 49.2446 788.1006 C
s58.0386 802.7095 m
57.5488 802.8687 57.0435 803.0137 56.5283 803.1504 C
54.4326 801.0981 52.707 798.6997 51.4497 796.0542 C
58.0386 802.7095 L
s74.9795 785.4639 m
74.8975 785.3809 L
74.9795 785.3809 L
74.9795 785.4639 L
s74.9795 796.4106 m
74.8223 796.4204 74.6611 796.4219 74.5049 796.4355 C
63.5601 785.3809 L
69.229 785.3809 L
74.9795 791.1895 L
74.9795 796.4106 L
s74.9795 791.1895 m
69.229 785.3809 L
74.8975 785.3809 L
74.9795 785.4639 L
74.9795 791.1895 L
s74.5049 796.4355 m
72.8745 796.583 71.3608 796.9712 69.8955 797.5068 C
57.8901 785.3809 L
63.5601 785.3809 L
74.5049 796.4355 L
s62.1104 801.0952 m
60.8306 801.6841 59.4849 802.2383 58.0386 802.7095 C
51.4497 796.0542 L
50.2783 793.5898 49.5142 790.9131 49.2446 788.1006 C
62.1104 801.0952 L
s49.1309 785.8198 m
49.1309 785.6729 49.1396 785.5273 49.1426 785.3809 C
52.2212 785.3809 L
65.9443 799.2417 L
64.7017 799.8491 63.4375 800.4844 62.1104 801.0952 C
49.2446 788.1006 L
49.1729 787.3486 49.1309 786.5889 49.1309 785.8198 c
s57.8901 785.3809 m
69.8955 797.5068 L
68.562 797.9941 67.2612 798.5977 65.9443 799.2417 C
52.2212 785.3809 L
57.8901 785.3809 L
s123.8799 750.0713 m
125.5732 750.9326 126.6455 752.1748 126.6455 753.5449 C
126.6455 753.915 L
126.3652 752.3408 125.3359 750.9717 123.8799 750.0713 C
s84.1826 748.9482 m
84.0947 748.8594 L
89.7646 748.8594 L
89.8525 748.9482 L
84.1826 748.9482 L
s89.8525 748.9482 m
89.7646 748.8594 L
95.4346 748.8594 L
95.5225 748.9482 L
89.8525 748.9482 L
s81.668 748.9482 m
82.1787 748.8916 82.7041 748.8594 83.2422 748.8594 C
84.0947 748.8594 L
84.1826 748.9482 L
81.668 748.9482 L
s101.1914 748.9482 m
101.1035 748.8594 L
106.7725 748.8594 L
106.8604 748.9482 L
101.1914 748.9482 L
s106.5273 749.2822 m
106.4395 749.1924 L
112.1094 749.1924 L
112.1973 749.2822 L
106.5273 749.2822 L
s95.5225 748.9482 m
95.4346 748.8594 L
101.1035 748.8594 L
101.1914 748.9482 L
95.5225 748.9482 L
s112.5303 748.9482 m
112.4424 748.8594 L
118.1113 748.8594 L
118.1992 748.9482 L
112.5303 748.9482 L
s120.001 748.9541 m
119.9561 748.9531 119.9111 748.9482 119.8662 748.9482 C
118.1992 748.9482 L
118.1113 748.8594 L
118.3496 748.8594 L
118.915 748.8594 119.4668 748.8926 120.001 748.9541 C
s97.9111 797.1724 m
104.7021 804.0317 L
103.1221 804.46 101.4912 804.7378 99.835 804.8413 C
95.6621 800.6265 L
96.5068 799.541 97.2568 798.3838 97.9111 797.1724 C
s119.8662 785.3809 m
119.9912 785.3809 120.1133 785.3701 120.2373 785.3643 C
121.4629 786.603 L
121.4639 786.7002 121.4678 786.7998 121.4678 786.895 c
121.4678 788.3745 121.126 789.8828 120.5088 791.3657 C
114.583 785.3809 L
119.8662 785.3809 L
s114.583 785.3809 m
120.5088 791.3657 L
119.9951 792.5996 119.292 793.8154 118.4189 794.9819 C
108.9131 785.3809 L
114.583 785.3809 L
s99.6299 793.1826 m
108.8701 802.5151 L
107.5381 803.1299 106.1416 803.6416 104.7021 804.0317 C
97.9111 797.1724 L
98.5967 795.9009 99.1787 794.5693 99.6299 793.1826 C
s95.6621 800.6265 m
99.835 804.8413 L
99.3389 804.8726 98.8408 804.8936 98.3398 804.8921 c
96.6328 804.8921 95.123 804.7192 93.7568 804.4297 C
92.9326 803.5972 L
93.9209 802.6772 94.8369 801.6865 95.6621 800.6265 C
s100.6445 788.4805 m
112.5186 800.4736 L
111.374 801.2354 110.1533 801.9224 108.8701 802.5151 C
99.6299 793.1826 L
100.1221 791.6719 100.4639 790.0986 100.6445 788.4805 C
s108.9131 785.3809 m
118.4189 794.9819 L
117.6396 796.0254 116.7285 797.0283 115.709 797.9702 C
103.2451 785.3809 L
108.9131 785.3809 L
s100.7959 785.8198 m
100.7959 785.6729 100.7871 785.5273 100.7842 785.3809 C
103.2451 785.3809 L
115.709 797.9702 L
114.7373 798.8677 113.6689 799.7085 112.5186 800.4736 C
100.6445 788.4805 L
100.7432 787.606 100.7959 786.7188 100.7959 785.8198 c
s121.3936 785.2275 m
121.4336 785.7017 121.4561 786.1606 121.4629 786.603 C
120.2373 785.3643 L
120.6318 785.3467 121.0186 785.3018 121.3936 785.2275 C
s93.7568 804.4297 m
93.2861 804.3296 92.8291 804.2192 92.3916 804.0928 C
92.5752 803.9307 92.7549 803.7637 92.9326 803.5972 C
93.7568 804.4297 L
s74.9795 791.1895 m
74.9795 785.4639 L
92.9326 803.5972 L
92.7549 803.7637 92.5752 803.9307 92.3916 804.0928 C
87.8018 802.7622 84.9814 800.0605 81.9502 798.23 C
74.9795 791.1895 L
s100.7842 785.3809 m
100.7871 785.5273 100.7959 785.6729 100.7959 785.8198 c
100.7959 786.7188 100.7432 787.606 100.6445 788.4805 C
97.5752 785.3809 L
100.7842 785.3809 L
s97.5752 785.3809 m
100.6445 788.4805 L
100.4639 790.0986 100.1221 791.6719 99.6299 793.1826 C
91.9053 785.3809 L
97.5752 785.3809 L
s81.9502 798.23 m
80.1504 797.1431 78.2754 796.3618 75.9092 796.3618 c
75.5908 796.3618 75.2881 796.3921 74.9795 796.4106 C
74.9795 791.1895 L
81.9502 798.23 L
s86.2373 785.3809 m
97.9111 797.1724 L
97.2568 798.3838 96.5068 799.541 95.6621 800.6265 C
80.5674 785.3809 L
86.2373 785.3809 L
s80.5674 785.3809 m
95.6621 800.6265 L
94.8369 801.6865 93.9209 802.6772 92.9326 803.5972 C
74.9795 785.4639 L
74.9795 785.3809 L
80.5674 785.3809 L
s91.9053 785.3809 m
99.6299 793.1826 L
99.1787 794.5693 98.5967 795.9009 97.9111 797.1724 C
86.2373 785.3809 L
91.9053 785.3809 L
s126.6455 774.6572 m
126.7295 774.7432 L
126.7295 779.5313 L
126.7295 779.8223 126.6963 780.1064 126.6475 780.3857 C
126.6455 780.3838 L
126.6455 774.6572 L
s78.5137 748.9482 m
81.668 748.9482 L
80.7373 749.0518 79.8662 749.2471 79.0732 749.5137 C
78.5137 748.9482 L
s126.6455 753.915 m
126.6953 754.1963 126.7295 754.4814 126.7295 754.7744 C
126.7295 757.5645 L
126.6455 757.4795 L
126.6455 753.915 L
s126.6475 780.3857 m
126.6465 780.3896 126.6455 780.3936 126.6455 780.3975 C
126.6455 780.3838 L
126.6475 780.3857 L
s123.8799 750.0713 m
122.8018 749.5215 121.4756 749.124 120.001 748.9541 C
121.4414 748.9785 122.7803 749.3896 123.8799 750.0713 C
s19.9795 781.4463 m
23.1318 784.6309 L
21.6714 783.9355 20.5396 782.8047 19.9795 781.4463 C
s126.6455 763.2051 m
126.7295 763.29 L
126.7295 769.0166 L
126.6455 768.9316 L
126.6455 763.2051 L
s126.6455 757.4795 m
126.7295 757.5645 L
126.7295 763.29 L
126.6455 763.2051 L
126.6455 757.4795 L
s126.6455 768.9316 m
126.7295 769.0166 L
126.7295 774.7432 L
126.6455 774.6572 L
126.6455 768.9316 L
s56.8062 768.2178 m
56.9951 768.0381 57.189 767.8643 57.3838 767.6904 C
58.3828 768.6992 L
57.874 768.5293 57.3481 768.3682 56.8062 768.2178 C
s74.8975 785.3809 m
69.229 785.3809 L
54.6006 770.6055 L
55.2837 769.7656 56.0181 768.9668 56.8062 768.2178 C
57.3481 768.3682 57.874 768.5293 58.3828 768.6992 C
74.8975 785.3809 L
s52.2212 785.3809 m
49.3696 782.501 L
49.5923 780.917 49.9712 779.3818 50.4912 777.9072 C
57.8901 785.3809 L
52.2212 785.3809 L
s49.1426 785.3809 m
49.1602 784.4063 49.2368 783.4453 49.3696 782.501 C
52.2212 785.3809 L
49.1426 785.3809 L
s52.2773 773.9844 m
52.9551 772.7949 53.7363 771.667 54.6006 770.6055 C
69.229 785.3809 L
63.5601 785.3809 L
52.2773 773.9844 L
s57.8901 785.3809 m
50.4912 777.9072 L
50.9722 776.5439 51.5674 775.2314 52.2773 773.9844 C
63.5601 785.3809 L
57.8901 785.3809 L
s74.4521 773.4775 m
74.6299 773.4834 74.7998 773.4951 74.9795 773.4971 C
74.9795 774.0107 L
74.4521 773.4775 L
s74.9795 779.7363 m
67.6172 772.2998 L
69.6099 772.9385 71.8057 773.3916 74.4521 773.4775 C
74.9795 774.0107 L
74.9795 779.7363 L
s74.9795 785.3809 m
74.8975 785.3809 L
58.3828 768.6992 L
61.7153 769.8135 64.4287 771.2783 67.6172 772.2998 C
74.9795 779.7363 L
74.9795 785.3809 L
s79.5225 761.4209 m
74.9795 756.832 L
74.9795 753.5449 L
74.9795 752.9121 75.208 752.3057 75.6201 751.752 C
88.3945 764.6553 L
85.7168 763.082 82.7178 761.9697 79.5225 761.4209 C
s88.3945 764.6553 m
75.6201 751.752 L
76.3154 750.8145 77.5381 750.0293 79.0732 749.5137 C
96.4092 767.0234 L
94.9873 767.1855 93.7207 767.4229 92.5693 767.71 C
91.291 766.5635 89.8945 765.5361 88.3945 764.6553 C
s101.8584 766.8008 m
84.1826 748.9482 L
89.8525 748.9482 L
108.6465 767.9307 L
106.6709 767.2695 104.417 766.8682 101.8584 766.8008 C
s126.6455 768.9316 m
106.8604 748.9482 L
112.5303 748.9482 L
126.6455 763.2051 L
126.6455 768.9316 L
s126.6455 763.2051 m
112.5303 748.9482 L
118.1992 748.9482 L
126.6455 757.4795 L
126.6455 763.2051 L
s118.1992 748.9482 m
119.8662 748.9482 L
119.9111 748.9482 119.9561 748.9531 120.001 748.9541 C
121.4756 749.124 122.8018 749.5215 123.8799 750.0713 C
125.3359 750.9717 126.3652 752.3408 126.6455 753.915 C
126.6455 757.4795 L
118.1992 748.9482 L
s74.9795 761.0264 m
74.9795 756.832 L
79.5225 761.4209 L
78.0459 761.167 76.5303 761.0264 74.9795 761.0264 C
s126.6455 780.3838 m
95.5225 748.9482 L
101.1914 748.9482 L
126.6455 774.6572 L
126.6455 780.3838 L
s124.4326 783.876 m
123.5791 784.5283 122.54 785.001 121.3936 785.2275 C
121.2471 783.4707 120.8643 781.5264 120.1748 779.5752 C
124.4326 783.876 L
s124.4326 783.876 m
120.1748 779.5752 L
118.4961 774.8252 114.9971 770.0557 108.6465 767.9307 C
89.8525 748.9482 L
95.5225 748.9482 L
126.6455 780.3838 L
126.6455 780.3975 L
126.4014 781.7715 125.5947 782.9873 124.4326 783.876 C
s126.6455 774.6572 m
101.1914 748.9482 L
106.8604 748.9482 L
126.6455 768.9316 L
126.6455 774.6572 L
s101.8584 766.8008 m
101.6475 766.7959 101.4424 766.7832 101.2275 766.7822 c
99.4375 766.7695 97.8467 766.8594 96.4092 767.0234 C
79.0732 749.5137 L
79.8662 749.2471 80.7373 749.0518 81.668 748.9482 C
84.1826 748.9482 L
101.8584 766.8008 L
s75.3447 773.5107 m
75.2178 773.5107 75.1045 773.499 74.9795 773.4971 C
74.9795 768.2842 L
79.6299 772.9814 L
78.3662 773.3096 76.9756 773.5107 75.3447 773.5107 c
s87.5342 769.5117 m
86.1748 770.1396 84.9551 770.7988 83.7314 771.3975 C
74.9795 762.5576 L
74.9795 761.0264 L
76.5303 761.0264 78.0459 761.167 79.5225 761.4209 C
87.5342 769.5117 L
s87.5342 769.5117 m
79.5225 761.4209 L
82.7178 761.9697 85.7168 763.082 88.3945 764.6553 C
91.6611 767.9541 L
90.1016 768.4043 88.7588 768.9443 87.5342 769.5117 C
s88.3945 764.6553 m
89.8945 765.5361 91.291 766.5635 92.5693 767.71 C
92.2588 767.7881 91.9561 767.8701 91.6611 767.9541 C
88.3945 764.6553 L
s74.9795 768.2842 m
74.9795 762.5576 L
83.7314 771.3975 L
82.4297 772.0322 81.1182 772.5967 79.6299 772.9814 C
74.9795 768.2842 L
s120.1748 779.5752 m
108.6465 767.9307 L
114.9971 770.0557 118.4961 774.8252 120.1748 779.5752 C
s120.1748 779.5752 m
120.8643 781.5264 121.2471 783.4707 121.3936 785.2275 C
121.0186 785.3018 120.6318 785.3467 120.2373 785.3643 C
101.8584 766.8008 L
104.417 766.8682 106.6709 767.2695 108.6465 767.9307 C
120.1748 779.5752 L
s103.2451 785.3809 m
100.7842 785.3809 L
100.7676 784.4717 100.6992 783.5752 100.583 782.6914 C
103.2451 785.3809 L
s100.583 782.6914 m
100.1729 779.5928 99.1709 776.668 97.6777 774.0322 C
108.9131 785.3809 L
103.2451 785.3809 L
100.583 782.6914 L
s108.9131 785.3809 m
97.6777 774.0322 L
96.3379 771.666 94.6045 769.5342 92.5693 767.71 C
93.7207 767.4229 94.9873 767.1855 96.4092 767.0234 C
114.583 785.3809 L
108.9131 785.3809 L
s119.8662 785.3809 m
114.583 785.3809 L
96.4092 767.0234 L
97.8467 766.8594 99.4375 766.7695 101.2275 766.7822 c
101.4424 766.7832 101.6475 766.7959 101.8584 766.8008 C
120.2373 785.3643 L
120.1133 785.3701 119.9912 785.3809 119.8662 785.3809 C
su1.0001 w75.0635 761.2764 m
89.2666 761.2764 100.8799 772.4072 100.8799 786.0703 c
100.8799 799.7334 89.2666 810.8643 75.0635 810.8643 c
60.8286 810.8643 49.2148 799.7334 49.2148 786.0703 c
49.2148 772.4072 60.8286 761.2764 75.0635 761.2764 c
s75.9932 796.6123 m
83.8232 796.6123 86.2793 805.1426 98.4238 805.1426 c
110.4033 805.1772 121.5518 795.6758 121.5518 787.1455 c
121.5518 779.7598 117.1064 767.1025 101.3115 767.0322 c
86.4111 766.9287 85.0186 773.7607 75.4287 773.7607 c
64.4453 773.7607 61.3262 767.4482 48.75 767.3799 c
34.9131 767.3105 28.6748 778.4766 28.542 785.3428 c
28.376 793.2832 33.8511 804.2754 49.5791 804.3105 c
61.9233 804.3447 66.9668 796.6123 75.9932 796.6123 c
s75.0635 753.7959 m
75.0635 817.5308 l
75.0635 820.1221 78.7803 822.2495 83.3262 822.2495 c
118.4336 822.2495 l
123.0117 822.2495 126.7295 820.1221 126.7295 817.5308 c
126.7295 753.7959 l
126.7295 751.2373 123.0117 749.1104 118.4336 749.1104 c
83.3262 749.1104 l
78.7803 749.1104 75.0635 751.2373 75.0635 753.7959 c
s119.9502 749.1982 m
26.5869 749.1982 l
22.79 749.1982 19.6743 751.8193 19.6743 755.0254 c
19.6743 779.7822 l
19.6743 783.0107 22.79 785.6313 26.5869 785.6313 c
119.9502 785.6313 l
123.6982 785.6313 126.8135 783.0107 126.8135 779.7822 c
126.8135 755.0254 l
126.8135 751.8193 123.6982 749.1982 119.9502 749.1982 c
sU%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
