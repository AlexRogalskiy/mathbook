%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 10.0
%%For: (ACER) (-)
%%Title: (4s2.eps)
%%CreationDate: 8/13/2006 2:22 PM
%%BoundingBox: 20 751 130 826
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 12 12 580 828
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -13 12
%AI7_GridSettings: 28.3465 10 28.3465 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.6 0.1412 0.9373 0.0275 k
 0.6 0.1412 0.9373 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4941 0.3529 0.9529 0.2 k
 0.4941 0.3529 0.9529 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k
 0.1882 0.1098 0.9059 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k
 0.9216 0.2157 0.9451 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 21.3906 m
64.0161 7.9009 L
52.3345 1.1543 L
40.6475 7.9009 L
40.6475 21.3906 L
52.3345 28.1372 L
64.0161 21.3906 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 21.394 m
37.479 7.9014 L
25.7944 1.1548 L
14.1099 7.9014 L
14.1099 21.3911 L
25.7944 28.1406 L
37.479 21.394 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d24.3691 44.0386 m
24.3691 30.5459 L
12.6846 23.7993 L
1 30.5459 L
1 44.0356 L
12.6846 50.7852 L
24.3691 44.0386 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d77.2871 44.3774 m
77.2871 30.8843 L
65.603 24.1382 L
53.9185 30.8843 L
53.9185 44.3765 L
65.603 51.1226 L
77.2871 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d50.7471 44.3774 m
50.7471 30.8843 L
39.0649 24.1382 L
27.3774 30.8843 L
27.3774 44.3765 L
39.0649 51.1235 L
50.7471 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 67.3599 m
37.479 53.8682 L
25.7944 47.1221 L
14.1099 53.8682 L
14.1099 67.3599 L
25.7944 74.1074 L
37.479 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 67.3599 m
64.0161 53.8682 L
52.3345 47.1221 L
40.6475 53.8682 L
40.6475 67.3599 L
52.3345 74.1074 L
64.0161 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 1 0 1 0 k
 1 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.3451 0 0.6863 0 k
 0.3451 0 0.6863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.9725 0.9451 0 0 k
 0.9725 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 J 0 j 1 w 4 M []0 d76.6968 817.2988 m
72.9951 813.5596 L
74.2051 813.7271 75.4409 813.8184 76.6968 813.8184 C
76.6968 817.2988 L
n0 R
0 0 0 1 K
0.25 w76.6968 805.8467 m
76.6968 811.5728 L
67.6616 802.4463 L
68.9785 801.8022 70.2793 801.1987 71.6128 800.7114 C
76.6968 805.8467 L
s64.8208 811.0298 m
62.376 809.8096 60.1577 808.2275 58.2456 806.355 C
58.7607 806.2183 59.2661 806.0732 59.7559 805.9141 C
64.8208 811.0298 L
s76.6968 799.6152 m
76.6968 800.1201 L
76.2222 799.6401 L
76.3784 799.6265 76.5396 799.625 76.6968 799.6152 C
s67.6616 802.4463 m
76.6968 811.5728 L
76.6968 813.8184 L
75.4409 813.8184 74.2051 813.7271 72.9951 813.5596 C
63.8276 804.2998 L
65.1548 803.689 66.4189 803.0537 67.6616 802.4463 C
s76.6968 800.1201 m
76.6968 805.8467 L
71.6128 800.7114 L
73.0781 800.1758 74.5918 799.7876 76.2222 799.6401 C
76.6968 800.1201 L
s63.8276 804.2998 m
72.9951 813.5596 L
70.0869 813.1567 67.335 812.2847 64.8208 811.0298 C
59.7559 805.9141 L
61.2021 805.4429 62.5479 804.8887 63.8276 804.2998 C
s50.9619 791.3052 m
51.2314 794.1177 51.9956 796.7944 53.167 799.2588 C
42.5996 788.5854 L
48.2695 788.5854 L
50.9619 791.3052 L
s36.9307 788.5854 m
55.1489 806.9868 L
53.9165 807.1611 52.6172 807.2686 51.2124 807.2646 c
50.7031 807.2637 50.2051 807.25 49.7173 807.2261 C
31.2617 788.5854 L
36.9307 788.5854 L
s31.2617 788.5854 m
49.7173 807.2261 L
47.123 807.1006 44.834 806.6587 42.8149 805.9819 C
31.0049 794.0532 L
30.4302 792.1895 30.1694 790.3208 30.1758 788.5854 C
31.2617 788.5854 L
s42.5996 788.5854 m
53.167 799.2588 L
54.4243 801.9043 56.1499 804.3027 58.2456 806.355 C
57.2656 806.6152 56.2393 806.8325 55.1489 806.9868 C
36.9307 788.5854 L
42.5996 788.5854 L
s31.0049 794.0532 m
42.8149 805.9819 L
36.168 803.7529 32.5098 798.9302 31.0049 794.0532 C
s50.9619 791.3052 m
48.2695 788.5854 L
50.8599 788.5854 L
50.8569 788.7319 50.8481 788.8774 50.8481 789.0244 c
50.8481 789.7935 50.8901 790.5532 50.9619 791.3052 C
s59.7559 805.9141 m
59.2661 806.0732 58.7607 806.2183 58.2456 806.355 C
56.1499 804.3027 54.4243 801.9043 53.167 799.2588 C
59.7559 805.9141 L
s76.6968 788.668 m
76.6147 788.5854 L
76.6968 788.5854 L
76.6968 788.668 L
s76.6968 799.6152 m
76.5396 799.625 76.3784 799.6265 76.2222 799.6401 C
65.2773 788.5854 L
70.9463 788.5854 L
76.6968 794.394 L
76.6968 799.6152 L
s76.6968 794.394 m
70.9463 788.5854 L
76.6147 788.5854 L
76.6968 788.668 L
76.6968 794.394 L
s76.2222 799.6401 m
74.5918 799.7876 73.0781 800.1758 71.6128 800.7114 C
59.6074 788.5854 L
65.2773 788.5854 L
76.2222 799.6401 L
s63.8276 804.2998 m
62.5479 804.8887 61.2021 805.4429 59.7559 805.9141 C
53.167 799.2588 L
51.9956 796.7944 51.2314 794.1177 50.9619 791.3052 C
63.8276 804.2998 L
s50.8481 789.0244 m
50.8481 788.8774 50.8569 788.7319 50.8599 788.5854 C
53.9385 788.5854 L
67.6616 802.4463 L
66.4189 803.0537 65.1548 803.689 63.8276 804.2998 C
50.9619 791.3052 L
50.8901 790.5532 50.8481 789.7935 50.8481 789.0244 c
s59.6074 788.5854 m
71.6128 800.7114 L
70.2793 801.1987 68.9785 801.8022 67.6616 802.4463 C
53.9385 788.5854 L
59.6074 788.5854 L
s76.6968 820.4849 m
76.6968 817.2988 L
84.5103 825.1904 L
80.1733 825.0552 76.6968 822.9897 76.6968 820.4849 C
s91.478 809.3228 m
107.2007 825.2036 L
101.5308 825.2036 L
87.8433 811.3779 L
89.1167 810.7886 90.3296 810.0972 91.478 809.3228 C
s87.8433 811.3779 m
101.5308 825.2036 L
95.8608 825.2036 L
83.6694 812.8887 L
85.1138 812.4976 86.5112 811.9941 87.8433 811.3779 C
s123.1108 788.4321 m
124.2573 788.2056 125.2964 787.7329 126.1499 787.0806 C
128.3628 789.3149 L
128.3628 795.042 L
123.1802 789.8076 L
123.1733 789.3652 123.1509 788.9063 123.1108 788.4321 C
s120.1362 798.1865 m
128.3628 806.4951 L
128.3628 812.2207 L
117.4263 801.1748 L
118.4458 800.2329 119.3569 799.23 120.1362 798.1865 C
s117.4263 801.1748 m
128.3628 812.2207 L
128.3628 817.9468 L
114.2358 803.6782 L
115.3862 802.9131 116.4546 802.0723 117.4263 801.1748 C
s122.2261 794.5703 m
128.3628 800.7681 L
128.3628 806.4951 L
120.1362 798.1865 L
121.0093 797.02 121.7124 795.8042 122.2261 794.5703 C
s125.5972 753.2759 m
127.2905 754.1372 128.3628 755.3794 128.3628 756.7495 C
128.3628 757.1196 L
128.0825 755.5454 127.0532 754.1763 125.5972 753.2759 C
s128.3628 783.6021 m
128.3628 789.3149 L
126.1499 787.0806 L
127.312 786.1919 128.1187 784.9761 128.3628 783.6021 C
s110.5874 805.7197 m
127.3901 822.6919 L
126.5728 823.5649 125.2847 824.2729 123.7222 824.7129 C
106.4194 807.2363 L
107.8589 806.8462 109.2554 806.3345 110.5874 805.7197 C
s106.4194 807.2363 m
123.7222 824.7129 L
122.6187 825.0239 121.3804 825.2036 120.0669 825.2036 C
118.5386 825.2036 L
101.5522 808.0459 L
103.2085 807.9424 104.8394 807.6646 106.4194 807.2363 C
s100.0571 808.0967 m
100.5581 808.0981 101.0562 808.0771 101.5522 808.0459 C
118.5386 825.2036 L
112.8687 825.2036 L
95.4741 807.6343 L
96.8403 807.9238 98.3501 808.0967 100.0571 808.0967 c
s94.1089 807.2974 m
94.5464 807.4238 95.0034 807.5342 95.4741 807.6343 C
112.8687 825.2036 L
107.2007 825.2036 L
91.478 809.3228 L
92.3999 808.7007 93.2808 808.0264 94.1089 807.2974 C
s114.2358 803.6782 m
128.3628 817.9468 L
128.3628 820.4849 L
128.3628 821.2808 128.0093 822.0317 127.3901 822.6919 C
110.5874 805.7197 L
111.8706 805.127 113.0913 804.4399 114.2358 803.6782 C
s123.1851 790.0996 m
123.1851 790.0044 123.1812 789.9048 123.1802 789.8076 C
128.3628 795.042 L
128.3628 800.7681 L
122.2261 794.5703 L
122.8433 793.0874 123.1851 791.5791 123.1851 790.0996 c
s85.8999 752.1528 m
85.812 752.064 L
91.4819 752.064 L
91.5698 752.1528 L
85.8999 752.1528 L
s91.5698 752.1528 m
91.4819 752.064 L
97.1519 752.064 L
97.2397 752.1528 L
91.5698 752.1528 L
s83.3853 752.1528 m
83.896 752.0962 84.4214 752.064 84.9595 752.064 C
85.812 752.064 L
85.8999 752.1528 L
83.3853 752.1528 L
s102.9087 752.1528 m
102.8208 752.064 L
108.4897 752.064 L
108.5776 752.1528 L
102.9087 752.1528 L
s108.2446 752.4868 m
108.1567 752.397 L
113.8267 752.397 L
113.9146 752.4868 L
108.2446 752.4868 L
s97.2397 752.1528 m
97.1519 752.064 L
102.8208 752.064 L
102.9087 752.1528 L
97.2397 752.1528 L
s78.8296 813.7266 m
90.1929 825.2036 L
84.9595 825.2036 L
84.8081 825.2036 84.6597 825.1953 84.5103 825.1904 C
76.6968 817.2988 L
76.6968 813.8184 L
77.4155 813.8184 78.1255 813.7827 78.8296 813.7266 C
s83.6694 812.8887 m
95.8608 825.2036 L
90.1929 825.2036 L
78.8296 813.7266 L
80.4917 813.5947 82.1089 813.311 83.6694 812.8887 C
s114.2476 752.1528 m
114.1597 752.064 L
119.8286 752.064 L
119.9165 752.1528 L
114.2476 752.1528 L
s121.7183 752.1587 m
121.6733 752.1577 121.6284 752.1528 121.5835 752.1528 C
119.9165 752.1528 L
119.8286 752.064 L
120.0669 752.064 L
120.6323 752.064 121.1841 752.0972 121.7183 752.1587 C
s95.4741 807.6343 m
95.0034 807.5342 94.5464 807.4238 94.1089 807.2974 C
94.2925 807.1353 94.4722 806.9683 94.6499 806.8018 C
95.4741 807.6343 L
s30.1753 788.2964 m
30.1733 788.3916 30.1763 788.4893 30.1758 788.5854 C
28.2202 788.5854 L
26.998 788.5854 25.8491 788.311 24.8491 787.8354 C
21.6968 784.6509 L
21.4492 784.0503 21.3076 783.4077 21.3076 782.7358 C
21.3076 778.5317 L
30.2168 787.5298 L
30.1953 787.7896 30.1802 788.0474 30.1753 788.2964 c
s31.3164 782.9146 m
21.3076 772.8052 L
21.3076 767.0786 L
33.2583 779.1499 L
32.4482 780.3813 31.8027 781.6548 31.3164 782.9146 C
s30.2168 787.5298 m
21.3076 778.5317 L
21.3076 772.8052 L
31.3164 782.9146 L
30.6963 784.52 30.332 786.0981 30.2168 787.5298 C
s128.3628 777.8618 m
128.4468 777.9478 L
128.4468 782.7358 L
128.4468 783.0269 128.4136 783.311 128.3647 783.5903 C
128.3628 783.5884 L
128.3628 777.8618 L
s76.6968 756.7495 m
76.6968 760.0366 L
68.8921 752.1528 L
74.561 752.1528 L
77.3374 754.9565 L
76.9253 755.5103 76.6968 756.1167 76.6968 756.7495 C
s77.3374 754.9565 m
74.561 752.1528 L
80.231 752.1528 L
80.7905 752.7183 L
79.2554 753.2339 78.0327 754.019 77.3374 754.9565 C
s76.6968 764.231 m
76.2026 764.231 75.7124 764.2476 75.2236 764.2739 C
63.2231 752.1528 L
68.8921 752.1528 L
76.6968 760.0366 L
76.6968 764.231 L
s80.231 752.1528 m
83.3853 752.1528 L
82.4546 752.2563 81.5835 752.4517 80.7905 752.7183 C
80.231 752.1528 L
s70.2793 765.0063 m
57.5532 752.1528 L
63.2231 752.1528 L
75.2236 764.2739 L
73.5278 764.3657 71.874 764.6138 70.2793 765.0063 C
s128.3628 757.1196 m
128.4126 757.4009 128.4468 757.686 128.4468 757.979 C
128.4468 760.769 L
128.3628 760.6841 L
128.3628 757.1196 L
s128.3647 783.5903 m
128.3638 783.5942 128.3628 783.5981 128.3628 783.6021 C
128.3628 783.5884 L
128.3647 783.5903 L
s66.0396 766.4497 m
51.8843 752.1528 L
57.5532 752.1528 L
70.2793 765.0063 L
68.811 765.3696 67.396 765.8579 66.0396 766.4497 C
s125.5972 753.2759 m
124.519 752.7261 123.1929 752.3286 121.7183 752.1587 C
123.1587 752.1831 124.4976 752.5942 125.5972 753.2759 C
s21.6968 784.6509 m
24.8491 787.8354 L
23.3887 787.1401 22.2568 786.0093 21.6968 784.6509 C
s33.2583 779.1499 m
21.3076 767.0786 L
21.3076 761.3521 L
35.8169 776.0073 L
34.8291 776.9907 33.9805 778.0532 33.2583 779.1499 C
s128.3628 766.4097 m
128.4468 766.4946 L
128.4468 772.2212 L
128.3628 772.1362 L
128.3628 766.4097 L
s128.3628 760.6841 m
128.4468 760.769 L
128.4468 766.4946 L
128.3628 766.4097 L
128.3628 760.6841 L
s128.3628 772.1362 m
128.4468 772.2212 L
128.4468 777.9478 L
128.3628 777.8618 L
128.3628 772.1362 L
s38.9751 773.4712 m
21.7139 756.0366 L
22.2295 754.8208 23.207 753.7896 24.4717 753.0962 C
42.7847 771.5933 L
41.395 772.0981 40.1255 772.7329 38.9751 773.4712 C
s35.8169 776.0073 m
21.3076 761.3521 L
21.3076 757.979 L
21.3076 757.2974 21.4556 756.646 21.7139 756.0366 C
38.9751 773.4712 L
37.8013 774.2251 36.7476 775.0806 35.8169 776.0073 C
s62.3315 768.4312 m
46.2153 752.1528 L
51.8843 752.1528 L
66.0396 766.4497 L
64.7441 767.0161 63.5029 767.6763 62.3315 768.4312 C
s42.7847 771.5933 m
24.4717 753.0962 L
25.5542 752.5024 26.8408 752.1528 28.2202 752.1528 C
29.2075 752.1528 L
47.3828 770.5103 L
45.7236 770.7114 44.1919 771.0835 42.7847 771.5933 C
s59.1011 770.895 m
40.5454 752.1528 L
46.2153 752.1528 L
62.3315 768.4312 L
61.186 769.1694 60.1074 769.9946 59.1011 770.895 C
s58.5234 771.4224 m
56.8896 770.9692 55.0781 770.6235 52.9951 770.4536 C
34.8765 752.1528 L
40.5454 752.1528 L
59.1011 770.895 L
58.9063 771.0688 58.7124 771.2427 58.5234 771.4224 C
s50.3833 770.3335 m
49.3384 770.3286 48.3418 770.395 47.3828 770.5103 C
29.2075 752.1528 L
34.8765 752.1528 L
52.9951 770.4536 L
52.1665 770.3862 51.3071 770.3384 50.3833 770.3335 c
s58.5234 771.4224 m
58.7124 771.2427 58.9063 771.0688 59.1011 770.895 C
60.1001 771.9038 L
59.5913 771.7339 59.0654 771.5728 58.5234 771.4224 C
s76.1694 776.6821 m
76.3472 776.688 76.5171 776.6997 76.6968 776.7017 C
76.6968 777.2153 L
76.1694 776.6821 L
s81.2397 764.6255 m
76.6968 760.0366 L
76.6968 756.7495 L
76.6968 756.1167 76.9253 755.5103 77.3374 754.9565 C
90.1118 767.8599 L
87.4341 766.2866 84.4351 765.1743 81.2397 764.6255 C
s90.1118 767.8599 m
77.3374 754.9565 L
78.0327 754.019 79.2554 753.2339 80.7905 752.7183 C
98.1265 770.228 L
96.7046 770.3901 95.438 770.6274 94.2866 770.9146 C
93.0083 769.7681 91.6118 768.7407 90.1118 767.8599 C
s103.5757 770.0054 m
85.8999 752.1528 L
91.5698 752.1528 L
110.3638 771.1353 L
108.3882 770.4741 106.1343 770.0728 103.5757 770.0054 C
s128.3628 772.1362 m
108.5776 752.1528 L
114.2476 752.1528 L
128.3628 766.4097 L
128.3628 772.1362 L
s128.3628 766.4097 m
114.2476 752.1528 L
119.9165 752.1528 L
128.3628 760.6841 L
128.3628 766.4097 L
s119.9165 752.1528 m
121.5835 752.1528 L
121.6284 752.1528 121.6733 752.1577 121.7183 752.1587 C
123.1929 752.3286 124.519 752.7261 125.5972 753.2759 C
127.0532 754.1763 128.0825 755.5454 128.3628 757.1196 C
128.3628 760.6841 L
119.9165 752.1528 L
s76.6968 764.231 m
76.6968 760.0366 L
81.2397 764.6255 L
79.7632 764.3716 78.2476 764.231 76.6968 764.231 C
s128.3628 783.5884 m
97.2397 752.1528 L
102.9087 752.1528 L
128.3628 777.8618 L
128.3628 783.5884 L
s126.1499 787.0806 m
125.2964 787.7329 124.2573 788.2056 123.1108 788.4321 C
122.9644 786.6753 122.5815 784.731 121.8921 782.7798 C
126.1499 787.0806 L
s126.1499 787.0806 m
121.8921 782.7798 L
120.2134 778.0298 116.7144 773.2603 110.3638 771.1353 C
91.5698 752.1528 L
97.2397 752.1528 L
128.3628 783.5884 L
128.3628 783.6021 L
128.1187 784.9761 127.312 786.1919 126.1499 787.0806 C
s128.3628 777.8618 m
102.9087 752.1528 L
108.5776 752.1528 L
128.3628 772.1362 L
128.3628 777.8618 L
s103.5757 770.0054 m
103.3647 770.0005 103.1597 769.9878 102.9448 769.9868 c
101.1548 769.9741 99.564 770.064 98.1265 770.228 C
80.7905 752.7183 L
81.5835 752.4517 82.4546 752.2563 83.3853 752.1528 C
85.8999 752.1528 L
103.5757 770.0054 L
su1.0001 w76.7808 764.481 m
90.9839 764.481 102.5972 775.6118 102.5972 789.2749 c
102.5972 802.938 90.9839 814.0688 76.7808 814.0688 c
62.5459 814.0688 50.9321 802.938 50.9321 789.2749 c
50.9321 775.6118 62.5459 764.481 76.7808 764.481 c
s77.7104 799.8169 m
85.5405 799.8169 87.9966 808.3472 100.1411 808.3472 c
112.1206 808.3818 123.269 798.8804 123.269 790.3501 c
123.269 782.9644 118.8237 770.3071 103.0288 770.2368 c
88.1284 770.1333 86.7358 776.9653 77.146 776.9653 c
66.1626 776.9653 63.0435 770.6528 50.4673 770.5845 c
36.6304 770.5151 30.3921 781.6812 30.2593 788.5469 c
30.0933 796.4878 35.5684 807.48 51.2964 807.5151 c
63.6406 807.5493 68.6841 799.8169 77.7104 799.8169 c
s76.7808 757.0005 m
76.7808 820.7354 l
76.7808 823.3267 80.4976 825.4541 85.0435 825.4541 c
120.1509 825.4541 l
124.729 825.4541 128.4468 823.3267 128.4468 820.7354 c
128.4468 757.0005 l
128.4468 754.4419 124.729 752.3149 120.1509 752.3149 c
85.0435 752.3149 l
80.4976 752.3149 76.7808 754.4419 76.7808 757.0005 c
s121.6675 752.4028 m
28.3042 752.4028 l
24.5073 752.4028 21.3916 755.0239 21.3916 758.23 c
21.3916 782.9868 l
21.3916 786.2153 24.5073 788.8359 28.3042 788.8359 c
121.6675 788.8359 l
125.4155 788.8359 128.5308 786.2153 128.5308 782.9868 c
128.5308 758.23 l
128.5308 755.0239 125.4155 752.4028 121.6675 752.4028 c
sU%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
