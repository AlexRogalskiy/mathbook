%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 10.0
%%For: (ACER) (-)
%%Title: (4s3.eps)
%%CreationDate: 8/13/2006 2:23 PM
%%BoundingBox: 14 751 123 826
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 12 12 580 828
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -13 12
%AI7_GridSettings: 28.3465 10 28.3465 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.6 0.1412 0.9373 0.0275 k
 0.6 0.1412 0.9373 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4941 0.3529 0.9529 0.2 k
 0.4941 0.3529 0.9529 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k
 0.1882 0.1098 0.9059 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k
 0.9216 0.2157 0.9451 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 21.3906 m
64.0161 7.9009 L
52.3345 1.1543 L
40.6475 7.9009 L
40.6475 21.3906 L
52.3345 28.1372 L
64.0161 21.3906 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 21.394 m
37.479 7.9014 L
25.7944 1.1548 L
14.1099 7.9014 L
14.1099 21.3911 L
25.7944 28.1406 L
37.479 21.394 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d24.3691 44.0386 m
24.3691 30.5459 L
12.6846 23.7993 L
1 30.5459 L
1 44.0356 L
12.6846 50.7852 L
24.3691 44.0386 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d77.2871 44.3774 m
77.2871 30.8843 L
65.603 24.1382 L
53.9185 30.8843 L
53.9185 44.3765 L
65.603 51.1226 L
77.2871 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d50.7471 44.3774 m
50.7471 30.8843 L
39.0649 24.1382 L
27.3774 30.8843 L
27.3774 44.3765 L
39.0649 51.1235 L
50.7471 44.3774 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d37.479 67.3599 m
37.479 53.8682 L
25.7944 47.1221 L
14.1099 53.8682 L
14.1099 67.3599 L
25.7944 74.1074 L
37.479 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4235 0.5059 0.949 0.3569 k
 0.4235 0.5059 0.949 0.3569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d64.0161 67.3599 m
64.0161 53.8682 L
52.3345 47.1221 L
40.6475 53.8682 L
40.6475 67.3599 L
52.3345 74.1074 L
64.0161 67.3599 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.4627 0.9922 0.0627 k
 0.2 0.4627 0.9922 0.0627 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 1 0 1 0 k
 1 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.3451 0 0.6863 0 k
 0.3451 0 0.6863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.57 0.75 0 0 k
 0.57 0.75 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.9725 0.9451 0 0 k
 0.9725 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 J 0 j 1 w 4 M []0 d70.1177 817.2983 m
66.4165 813.5591 L
67.6255 813.7266 68.8618 813.8179 70.1177 813.8179 C
70.1177 817.2983 L
n0 R
0 0 0 1 K
0.25 w70.1177 805.8462 m
70.1177 811.5723 L
61.0825 802.4458 L
62.3989 801.8018 63.6997 801.1982 65.0337 800.7109 C
70.1177 805.8462 L
s58.2417 811.0293 m
55.7974 809.8091 53.5786 808.2271 51.6665 806.3545 C
52.1821 806.2178 52.687 806.0728 53.1763 805.9136 C
58.2417 811.0293 L
s70.1177 799.6147 m
70.1177 800.1196 L
69.6431 799.6396 L
69.7993 799.626 69.9604 799.6245 70.1177 799.6147 C
s61.0825 802.4458 m
70.1177 811.5723 L
70.1177 813.8179 L
68.8618 813.8179 67.6255 813.7266 66.4165 813.5591 C
57.2485 804.2993 L
58.5757 803.6885 59.8403 803.0532 61.0825 802.4458 C
s70.1177 800.1196 m
70.1177 805.8462 L
65.0337 800.7109 L
66.4985 800.1753 68.0122 799.7871 69.6431 799.6396 C
70.1177 800.1196 L
s57.2485 804.2993 m
66.4165 813.5591 L
63.5083 813.1563 60.7563 812.2842 58.2417 811.0293 C
53.1763 805.9136 L
54.6235 805.4424 55.9692 804.8882 57.2485 804.2993 C
s44.3833 791.3047 m
44.6528 794.1172 45.4165 796.7939 46.5884 799.2583 C
36.02 788.585 L
41.6899 788.585 L
44.3833 791.3047 L
s30.3521 788.585 m
48.5698 806.9863 L
47.3374 807.1606 46.0376 807.2681 44.6333 807.2642 c
44.1235 807.2632 43.6255 807.2495 43.1382 807.2256 C
24.6821 788.585 L
30.3521 788.585 L
s24.6821 788.585 m
43.1382 807.2256 L
40.5435 807.1001 38.2544 806.6582 36.2358 805.9814 C
24.4263 794.0527 L
23.8511 792.189 23.5903 790.3203 23.5962 788.585 C
24.6821 788.585 L
s36.02 788.585 m
46.5884 799.2583 L
47.8452 801.9038 49.5708 804.3022 51.6665 806.3545 C
50.686 806.6147 49.6606 806.832 48.5698 806.9863 C
30.3521 788.585 L
36.02 788.585 L
s24.4263 794.0527 m
36.2358 805.9814 L
29.5884 803.7524 25.9302 798.9297 24.4263 794.0527 C
s44.3833 791.3047 m
41.6899 788.585 L
44.2808 788.585 L
44.2778 788.7314 44.269 788.877 44.269 789.0239 c
44.269 789.793 44.311 790.5527 44.3833 791.3047 C
s53.1763 805.9136 m
52.687 806.0728 52.1821 806.2178 51.6665 806.3545 C
49.5708 804.3022 47.8452 801.9038 46.5884 799.2583 C
53.1763 805.9136 L
s70.1177 788.6675 m
70.0356 788.585 L
70.1177 788.585 L
70.1177 788.6675 L
s70.1177 799.6147 m
69.9604 799.6245 69.7993 799.626 69.6431 799.6396 C
58.6978 788.585 L
64.3677 788.585 L
70.1177 794.3936 L
70.1177 799.6147 L
s70.1177 794.3936 m
64.3677 788.585 L
70.0356 788.585 L
70.1177 788.6675 L
70.1177 794.3936 L
s69.6431 799.6396 m
68.0122 799.7871 66.4985 800.1753 65.0337 800.7109 C
53.0278 788.585 L
58.6978 788.585 L
69.6431 799.6396 L
s57.2485 804.2993 m
55.9692 804.8882 54.6235 805.4424 53.1763 805.9136 C
46.5884 799.2583 L
45.4165 796.7939 44.6528 794.1172 44.3833 791.3047 C
57.2485 804.2993 L
s44.269 789.0239 m
44.269 788.877 44.2778 788.7314 44.2808 788.585 C
47.3599 788.585 L
61.0825 802.4458 L
59.8403 803.0532 58.5757 803.6885 57.2485 804.2993 C
44.3833 791.3047 L
44.311 790.5527 44.269 789.793 44.269 789.0239 c
s53.0278 788.585 m
65.0337 800.7109 L
63.6997 801.1982 62.3989 801.8018 61.0825 802.4458 C
47.3599 788.585 L
53.0278 788.585 L
s70.1177 820.4844 m
70.1177 817.2983 L
77.9312 825.1899 L
73.5942 825.0547 70.1177 822.9893 70.1177 820.4844 C
s84.8989 809.3223 m
100.6216 825.2031 L
94.9517 825.2031 L
81.2642 811.3774 L
82.5376 810.7881 83.7505 810.0967 84.8989 809.3223 C
s81.2642 811.3774 m
94.9517 825.2031 L
89.2817 825.2031 L
77.0903 812.8882 L
78.5347 812.4971 79.9321 811.9937 81.2642 811.3774 C
s116.5317 788.4316 m
117.6782 788.2051 118.7173 787.7324 119.5708 787.0801 C
121.7837 789.3145 L
121.7837 795.0415 L
116.6011 789.8071 L
116.5942 789.3647 116.5718 788.9058 116.5317 788.4316 C
s113.5571 798.186 m
121.7837 806.4946 L
121.7837 812.2202 L
110.8472 801.1743 L
111.8667 800.2324 112.7778 799.2295 113.5571 798.186 C
s110.8472 801.1743 m
121.7837 812.2202 L
121.7837 817.9463 L
107.6567 803.6777 L
108.8071 802.9126 109.8755 802.0718 110.8472 801.1743 C
s115.647 794.5698 m
121.7837 800.7676 L
121.7837 806.4946 L
113.5571 798.186 L
114.4302 797.0195 115.1333 795.8037 115.647 794.5698 C
s119.0181 753.2754 m
120.7114 754.1367 121.7837 755.3789 121.7837 756.749 C
121.7837 757.1191 L
121.5034 755.5449 120.4741 754.1758 119.0181 753.2754 C
s121.7837 783.6016 m
121.7837 789.3145 L
119.5708 787.0801 L
120.7329 786.1914 121.5396 784.9756 121.7837 783.6016 C
s104.0083 805.7192 m
120.811 822.6914 L
119.9937 823.5645 118.7056 824.2725 117.1431 824.7124 C
99.8403 807.2358 L
101.2798 806.8457 102.6763 806.334 104.0083 805.7192 C
s99.8403 807.2358 m
117.1431 824.7124 L
116.0396 825.0234 114.8013 825.2031 113.4878 825.2031 C
111.9595 825.2031 L
94.9731 808.0454 L
96.6294 807.9419 98.2603 807.6641 99.8403 807.2358 C
s93.478 808.0962 m
93.979 808.0977 94.4771 808.0767 94.9731 808.0454 C
111.9595 825.2031 L
106.2896 825.2031 L
88.895 807.6338 L
90.2612 807.9233 91.771 808.0962 93.478 808.0962 c
s87.5298 807.2969 m
87.9673 807.4233 88.4243 807.5337 88.895 807.6338 C
106.2896 825.2031 L
100.6216 825.2031 L
84.8989 809.3223 L
85.8208 808.7002 86.7017 808.0259 87.5298 807.2969 C
s107.6567 803.6777 m
121.7837 817.9463 L
121.7837 820.4844 L
121.7837 821.2803 121.4302 822.0313 120.811 822.6914 C
104.0083 805.7192 L
105.2915 805.1265 106.5122 804.4395 107.6567 803.6777 C
s116.606 790.0991 m
116.606 790.0039 116.6021 789.9043 116.6011 789.8071 C
121.7837 795.0415 L
121.7837 800.7676 L
115.647 794.5698 L
116.2642 793.0869 116.606 791.5786 116.606 790.0991 c
s79.3208 752.1523 m
79.2329 752.0635 L
84.9028 752.0635 L
84.9907 752.1523 L
79.3208 752.1523 L
s84.9907 752.1523 m
84.9028 752.0635 L
90.5728 752.0635 L
90.6606 752.1523 L
84.9907 752.1523 L
s76.8062 752.1523 m
77.3169 752.0957 77.8423 752.0635 78.3804 752.0635 C
79.2329 752.0635 L
79.3208 752.1523 L
76.8062 752.1523 L
s96.3296 752.1523 m
96.2417 752.0635 L
101.9106 752.0635 L
101.9985 752.1523 L
96.3296 752.1523 L
s101.6655 752.4863 m
101.5776 752.3965 L
107.2476 752.3965 L
107.3354 752.4863 L
101.6655 752.4863 L
s90.6606 752.1523 m
90.5728 752.0635 L
96.2417 752.0635 L
96.3296 752.1523 L
90.6606 752.1523 L
s72.2505 813.7261 m
83.6138 825.2031 L
78.3804 825.2031 L
78.229 825.2031 78.0806 825.1948 77.9312 825.1899 C
70.1177 817.2983 L
70.1177 813.8179 L
70.8364 813.8179 71.5464 813.7822 72.2505 813.7261 C
s77.0903 812.8882 m
89.2817 825.2031 L
83.6138 825.2031 L
72.2505 813.7261 L
73.9126 813.5942 75.5298 813.3105 77.0903 812.8882 C
s107.6685 752.1523 m
107.5806 752.0635 L
113.2495 752.0635 L
113.3374 752.1523 L
107.6685 752.1523 L
s115.1392 752.1582 m
115.0942 752.1572 115.0493 752.1523 115.0044 752.1523 C
113.3374 752.1523 L
113.2495 752.0635 L
113.4878 752.0635 L
114.0532 752.0635 114.605 752.0967 115.1392 752.1582 C
s93.0493 800.3765 m
99.8403 807.2358 L
98.2603 807.6641 96.6294 807.9419 94.9731 808.0454 C
90.8003 803.8306 L
91.645 802.7451 92.395 801.5879 93.0493 800.3765 C
s115.0044 788.585 m
115.1294 788.585 115.2515 788.5747 115.3755 788.5688 C
116.6011 789.8071 L
116.6021 789.9043 116.606 790.0039 116.606 790.0991 c
116.606 791.5786 116.2642 793.0869 115.647 794.5698 C
109.7212 788.585 L
115.0044 788.585 L
s109.7212 788.585 m
115.647 794.5698 L
115.1333 795.8037 114.4302 797.0195 113.5571 798.186 C
104.0513 788.585 L
109.7212 788.585 L
s94.7681 796.3867 m
104.0083 805.7192 L
102.6763 806.334 101.2798 806.8457 99.8403 807.2358 C
93.0493 800.3765 L
93.7349 799.105 94.3169 797.7734 94.7681 796.3867 C
s90.8003 803.8306 m
94.9731 808.0454 L
94.4771 808.0767 93.979 808.0977 93.478 808.0962 c
91.771 808.0962 90.2612 807.9233 88.895 807.6338 C
88.0708 806.8013 L
89.0591 805.8813 89.9751 804.8906 90.8003 803.8306 C
s95.7827 791.6846 m
107.6567 803.6777 L
106.5122 804.4395 105.2915 805.1265 104.0083 805.7192 C
94.7681 796.3867 L
95.2603 794.876 95.6021 793.3027 95.7827 791.6846 C
s104.0513 788.585 m
113.5571 798.186 L
112.7778 799.2295 111.8667 800.2324 110.8472 801.1743 C
98.3833 788.585 L
104.0513 788.585 L
s95.9341 789.0239 m
95.9341 788.877 95.9253 788.7314 95.9224 788.585 C
98.3833 788.585 L
110.8472 801.1743 L
109.8755 802.0718 108.8071 802.9126 107.6567 803.6777 C
95.7827 791.6846 L
95.8813 790.8101 95.9341 789.9229 95.9341 789.0239 c
s116.5317 788.4316 m
116.5718 788.9058 116.5942 789.3647 116.6011 789.8071 C
115.3755 788.5688 L
115.77 788.5503 116.1567 788.5054 116.5317 788.4316 C
s88.895 807.6338 m
88.4243 807.5337 87.9673 807.4233 87.5298 807.2969 C
87.7134 807.1348 87.8931 806.9678 88.0708 806.8013 C
88.895 807.6338 L
s70.1177 794.3936 m
70.1177 788.6675 L
88.0708 806.8013 L
87.8931 806.9678 87.7134 807.1348 87.5298 807.2969 C
82.9399 805.9663 80.1196 803.2646 77.0884 801.4341 C
70.1177 794.3936 L
s95.9224 788.585 m
95.9253 788.7314 95.9341 788.877 95.9341 789.0239 c
95.9341 789.9229 95.8813 790.8101 95.7827 791.6846 C
92.7134 788.585 L
95.9224 788.585 L
s92.7134 788.585 m
95.7827 791.6846 L
95.6021 793.3027 95.2603 794.876 94.7681 796.3867 C
87.0435 788.585 L
92.7134 788.585 L
s77.0884 801.4341 m
75.2886 800.3472 73.4136 799.5659 71.0474 799.5659 c
70.729 799.5659 70.4263 799.5962 70.1177 799.6147 C
70.1177 794.3936 L
77.0884 801.4341 L
s81.3755 788.585 m
93.0493 800.3765 L
92.395 801.5879 91.645 802.7451 90.8003 803.8306 C
75.7056 788.585 L
81.3755 788.585 L
s75.7056 788.585 m
90.8003 803.8306 L
89.9751 804.8906 89.0591 805.8813 88.0708 806.8013 C
70.1177 788.6675 L
70.1177 788.585 L
75.7056 788.585 L
s87.0435 788.585 m
94.7681 796.3867 L
94.3169 797.7734 93.7349 799.105 93.0493 800.3765 C
81.3755 788.585 L
87.0435 788.585 L
s23.5962 788.2959 m
23.5942 788.3911 23.5972 788.4888 23.5962 788.585 C
21.6411 788.585 L
20.4185 788.585 19.27 788.3105 18.27 787.835 C
15.1177 784.6504 L
14.8696 784.0498 14.729 783.4072 14.729 782.7354 C
14.729 778.5313 L
23.6372 787.5293 L
23.6157 787.7891 23.6011 788.0469 23.5962 788.2959 c
s24.7368 782.9141 m
14.729 772.8047 L
14.729 767.0781 L
26.6792 779.1494 L
25.8696 780.3809 25.2231 781.6543 24.7368 782.9141 C
s23.6372 787.5293 m
14.729 778.5313 L
14.729 772.8047 L
24.7368 782.9141 L
24.1177 784.5195 23.7524 786.0977 23.6372 787.5293 C
s121.7837 777.8613 m
121.8677 777.9473 L
121.8677 782.7354 L
121.8677 783.0264 121.8345 783.3105 121.7856 783.5898 C
121.7837 783.5879 L
121.7837 777.8613 L
s70.1177 756.749 m
70.1177 760.0361 L
62.313 752.1523 L
67.9819 752.1523 L
70.7583 754.9561 L
70.3462 755.5098 70.1177 756.1162 70.1177 756.749 C
s70.7583 754.9561 m
67.9819 752.1523 L
73.6519 752.1523 L
74.2114 752.7178 L
72.6763 753.2334 71.4536 754.0186 70.7583 754.9561 C
s70.1177 764.2305 m
69.6235 764.2305 69.1333 764.2471 68.645 764.2734 C
56.644 752.1523 L
62.313 752.1523 L
70.1177 760.0361 L
70.1177 764.2305 L
s73.6519 752.1523 m
76.8062 752.1523 L
75.8755 752.2559 75.0044 752.4512 74.2114 752.7178 C
73.6519 752.1523 L
s63.6997 765.0059 m
50.9741 752.1523 L
56.644 752.1523 L
68.645 764.2734 L
66.9487 764.3652 65.2954 764.6133 63.6997 765.0059 C
s121.7837 757.1191 m
121.8335 757.4004 121.8677 757.6855 121.8677 757.9785 C
121.8677 760.7686 L
121.7837 760.6836 L
121.7837 757.1191 L
s121.7856 783.5898 m
121.7847 783.5938 121.7837 783.5977 121.7837 783.6016 C
121.7837 783.5879 L
121.7856 783.5898 L
s59.4604 766.4492 m
45.3052 752.1523 L
50.9741 752.1523 L
63.6997 765.0059 L
62.2319 765.3691 60.8169 765.8574 59.4604 766.4492 C
s119.0181 753.2754 m
117.9399 752.7256 116.6138 752.3281 115.1392 752.1582 C
116.5796 752.1826 117.9185 752.5938 119.0181 753.2754 C
s15.1177 784.6504 m
18.27 787.835 L
16.8091 787.1396 15.6782 786.0088 15.1177 784.6504 C
s26.6792 779.1494 m
14.729 767.0781 L
14.729 761.3516 L
29.2378 776.0068 L
28.2505 776.9902 27.4009 778.0527 26.6792 779.1494 C
s121.7837 766.4092 m
121.8677 766.4941 L
121.8677 772.2207 L
121.7837 772.1357 L
121.7837 766.4092 L
s121.7837 760.6836 m
121.8677 760.7686 L
121.8677 766.4941 L
121.7837 766.4092 L
121.7837 760.6836 L
s121.7837 772.1357 m
121.8677 772.2207 L
121.8677 777.9473 L
121.7837 777.8613 L
121.7837 772.1357 L
s32.396 773.4707 m
15.1353 756.0361 L
15.6509 754.8203 16.6274 753.7891 17.8931 753.0957 C
36.2056 771.5928 L
34.8159 772.0977 33.5464 772.7324 32.396 773.4707 C
s29.2378 776.0068 m
14.729 761.3516 L
14.729 757.9785 L
14.729 757.2969 14.8765 756.6455 15.1353 756.0361 C
32.396 773.4707 L
31.2222 774.2246 30.1685 775.0801 29.2378 776.0068 C
s55.7524 768.4307 m
39.6362 752.1523 L
45.3052 752.1523 L
59.4604 766.4492 L
58.1646 767.0156 56.9243 767.6758 55.7524 768.4307 C
s36.2056 771.5928 m
17.8931 753.0957 L
18.9751 752.502 20.2622 752.1523 21.6411 752.1523 C
22.6284 752.1523 L
40.8032 770.5098 L
39.145 770.7109 37.6128 771.083 36.2056 771.5928 C
s52.522 770.8945 m
33.9663 752.1523 L
39.6362 752.1523 L
55.7524 768.4307 L
54.6069 769.1689 53.5278 769.9941 52.522 770.8945 C
s51.9438 771.4219 m
50.311 770.9688 48.4985 770.623 46.4165 770.4531 C
28.2974 752.1523 L
33.9663 752.1523 L
52.522 770.8945 L
52.3267 771.0684 52.1333 771.2422 51.9438 771.4219 C
s43.8042 770.333 m
42.7593 770.3281 41.7622 770.3945 40.8032 770.5098 C
22.6284 752.1523 L
28.2974 752.1523 L
46.4165 770.4531 L
45.5874 770.3857 44.728 770.3379 43.8042 770.333 c
s70.1177 776.7012 m
69.938 776.6992 69.7681 776.6875 69.5903 776.6816 C
59.4604 766.4492 L
60.8169 765.8574 62.2319 765.3691 63.6997 765.0059 C
70.1177 771.4883 L
70.1177 776.7012 L
s53.521 771.9033 m
52.522 770.8945 L
53.5278 769.9941 54.6069 769.1689 55.7524 768.4307 C
62.7554 775.5039 L
59.5669 774.4824 56.854 773.0176 53.521 771.9033 C
s62.7554 775.5039 m
55.7524 768.4307 L
56.9243 767.6758 58.1646 767.0156 59.4604 766.4492 C
69.5903 776.6816 L
66.9438 776.5957 64.7485 776.1426 62.7554 775.5039 C
s51.9438 771.4219 m
52.1333 771.2422 52.3267 771.0684 52.522 770.8945 C
53.521 771.9033 L
53.0122 771.7334 52.4868 771.5723 51.9438 771.4219 C
s68.645 764.2734 m
69.1333 764.2471 69.6235 764.2305 70.1177 764.2305 C
70.1177 765.7617 L
68.645 764.2734 L
s70.1177 771.4883 m
63.6997 765.0059 L
65.2954 764.6133 66.9487 764.3652 68.645 764.2734 C
70.1177 765.7617 L
70.1177 771.4883 L
s70.0356 788.585 m
64.3677 788.585 L
49.7388 773.8096 L
50.4224 772.9697 51.1567 772.1709 51.9438 771.4219 C
52.4868 771.5723 53.0122 771.7334 53.521 771.9033 C
70.0356 788.585 L
s47.3599 788.585 m
44.5083 785.7051 L
44.731 784.1211 45.1099 782.5859 45.6294 781.1113 C
53.0278 788.585 L
47.3599 788.585 L
s44.2808 788.585 m
44.2983 787.6104 44.3755 786.6494 44.5083 785.7051 C
47.3599 788.585 L
44.2808 788.585 L
s47.4155 777.1885 m
48.0933 775.999 48.8745 774.8711 49.7388 773.8096 C
64.3677 788.585 L
58.6978 788.585 L
47.4155 777.1885 L
s53.0278 788.585 m
45.6294 781.1113 L
46.1099 779.748 46.7056 778.4355 47.4155 777.1885 C
58.6978 788.585 L
53.0278 788.585 L
s69.5903 776.6816 m
69.7681 776.6875 69.938 776.6992 70.1177 776.7012 C
70.1177 777.2148 L
69.5903 776.6816 L
s70.1177 782.9404 m
62.7554 775.5039 L
64.7485 776.1426 66.9438 776.5957 69.5903 776.6816 C
70.1177 777.2148 L
70.1177 782.9404 L
s70.1177 788.585 m
70.0356 788.585 L
53.521 771.9033 L
56.854 773.0176 59.5669 774.4824 62.7554 775.5039 C
70.1177 782.9404 L
70.1177 788.585 L
s74.6606 764.625 m
70.1177 760.0361 L
70.1177 756.749 L
70.1177 756.1162 70.3462 755.5098 70.7583 754.9561 C
83.5327 767.8594 L
80.855 766.2861 77.856 765.1738 74.6606 764.625 C
s83.5327 767.8594 m
70.7583 754.9561 L
71.4536 754.0186 72.6763 753.2334 74.2114 752.7178 C
91.5474 770.2275 L
90.1255 770.3896 88.8589 770.627 87.7075 770.9141 C
86.4292 769.7676 85.0327 768.7402 83.5327 767.8594 C
s96.9966 770.0049 m
79.3208 752.1523 L
84.9907 752.1523 L
103.7847 771.1348 L
101.8091 770.4736 99.5552 770.0723 96.9966 770.0049 C
s121.7837 772.1357 m
101.9985 752.1523 L
107.6685 752.1523 L
121.7837 766.4092 L
121.7837 772.1357 L
s121.7837 766.4092 m
107.6685 752.1523 L
113.3374 752.1523 L
121.7837 760.6836 L
121.7837 766.4092 L
s113.3374 752.1523 m
115.0044 752.1523 L
115.0493 752.1523 115.0942 752.1572 115.1392 752.1582 C
116.6138 752.3281 117.9399 752.7256 119.0181 753.2754 C
120.4741 754.1758 121.5034 755.5449 121.7837 757.1191 C
121.7837 760.6836 L
113.3374 752.1523 L
s70.1177 764.2305 m
70.1177 760.0361 L
74.6606 764.625 L
73.1841 764.3711 71.6685 764.2305 70.1177 764.2305 C
s121.7837 783.5879 m
90.6606 752.1523 L
96.3296 752.1523 L
121.7837 777.8613 L
121.7837 783.5879 L
s119.5708 787.0801 m
118.7173 787.7324 117.6782 788.2051 116.5317 788.4316 C
116.3853 786.6748 116.0024 784.7305 115.313 782.7793 C
119.5708 787.0801 L
s119.5708 787.0801 m
115.313 782.7793 L
113.6343 778.0293 110.1353 773.2598 103.7847 771.1348 C
84.9907 752.1523 L
90.6606 752.1523 L
121.7837 783.5879 L
121.7837 783.6016 L
121.5396 784.9756 120.7329 786.1914 119.5708 787.0801 C
s121.7837 777.8613 m
96.3296 752.1523 L
101.9985 752.1523 L
121.7837 772.1357 L
121.7837 777.8613 L
s96.9966 770.0049 m
96.7856 770 96.5806 769.9873 96.3657 769.9863 c
94.5757 769.9736 92.9849 770.0635 91.5474 770.2275 C
74.2114 752.7178 L
75.0044 752.4512 75.8755 752.2559 76.8062 752.1523 C
79.3208 752.1523 L
96.9966 770.0049 L
s70.4829 776.7148 m
70.356 776.7148 70.2427 776.7031 70.1177 776.7012 C
70.1177 771.4883 L
74.7681 776.1855 L
73.5044 776.5137 72.1138 776.7148 70.4829 776.7148 c
s82.6724 772.7158 m
81.313 773.3438 80.0933 774.0029 78.8696 774.6016 C
70.1177 765.7617 L
70.1177 764.2305 L
71.6685 764.2305 73.1841 764.3711 74.6606 764.625 C
82.6724 772.7158 L
s82.6724 772.7158 m
74.6606 764.625 L
77.856 765.1738 80.855 766.2861 83.5327 767.8594 C
86.7993 771.1582 L
85.2397 771.6084 83.897 772.1484 82.6724 772.7158 C
s83.5327 767.8594 m
85.0327 768.7402 86.4292 769.7676 87.7075 770.9141 C
87.397 770.9922 87.0942 771.0742 86.7993 771.1582 C
83.5327 767.8594 L
s70.1177 771.4883 m
70.1177 765.7617 L
78.8696 774.6016 L
77.5679 775.2363 76.2563 775.8008 74.7681 776.1855 C
70.1177 771.4883 L
s115.313 782.7793 m
103.7847 771.1348 L
110.1353 773.2598 113.6343 778.0293 115.313 782.7793 C
s115.313 782.7793 m
116.0024 784.7305 116.3853 786.6748 116.5317 788.4316 C
116.1567 788.5054 115.77 788.5503 115.3755 788.5688 C
96.9966 770.0049 L
99.5552 770.0723 101.8091 770.4736 103.7847 771.1348 C
115.313 782.7793 L
s98.3833 788.585 m
95.9224 788.585 L
95.9058 787.6758 95.8374 786.7793 95.7212 785.8955 C
98.3833 788.585 L
s95.7212 785.8955 m
95.311 782.7969 94.3091 779.8721 92.8159 777.2363 C
104.0513 788.585 L
98.3833 788.585 L
95.7212 785.8955 L
s104.0513 788.585 m
92.8159 777.2363 L
91.4761 774.8701 89.7427 772.7383 87.7075 770.9141 C
88.8589 770.627 90.1255 770.3896 91.5474 770.2275 C
109.7212 788.585 L
104.0513 788.585 L
s115.0044 788.585 m
109.7212 788.585 L
91.5474 770.2275 L
92.9849 770.0635 94.5757 769.9736 96.3657 769.9863 c
96.5806 769.9873 96.7856 770 96.9966 770.0049 C
115.3755 788.5688 L
115.2515 788.5747 115.1294 788.585 115.0044 788.585 C
s87.7075 770.9141 m
89.7427 772.7383 91.4761 774.8701 92.8159 777.2363 C
86.7993 771.1582 L
87.0942 771.0742 87.397 770.9922 87.7075 770.9141 C
su1.0001 w70.2017 764.4805 m
84.4048 764.4805 96.0181 775.6113 96.0181 789.2744 c
96.0181 802.9375 84.4048 814.0684 70.2017 814.0684 c
55.9673 814.0684 44.353 802.9375 44.353 789.2744 c
44.353 775.6113 55.9673 764.4805 70.2017 764.4805 c
s71.1313 799.8164 m
78.9614 799.8164 81.4175 808.3467 93.562 808.3467 c
105.5415 808.3813 116.6899 798.8799 116.6899 790.3496 c
116.6899 782.9639 112.2446 770.3066 96.4497 770.2363 c
81.5493 770.1328 80.1567 776.9648 70.5669 776.9648 c
59.5835 776.9648 56.4644 770.6523 43.8882 770.584 c
30.0513 770.5146 23.813 781.6807 23.6802 788.5464 c
23.5142 796.4873 28.9888 807.4795 44.7173 807.5146 c
57.061 807.5488 62.105 799.8164 71.1313 799.8164 c
s70.2017 757 m
70.2017 820.7349 l
70.2017 823.3262 73.9185 825.4536 78.4644 825.4536 c
113.5718 825.4536 l
118.1499 825.4536 121.8677 823.3262 121.8677 820.7349 c
121.8677 757 l
121.8677 754.4414 118.1499 752.3145 113.5718 752.3145 c
78.4644 752.3145 l
73.9185 752.3145 70.2017 754.4414 70.2017 757 c
s115.0884 752.4023 m
21.7251 752.4023 l
17.9282 752.4023 14.813 755.0234 14.813 758.2295 c
14.813 782.9863 l
14.813 786.2148 17.9282 788.8354 21.7251 788.8354 c
115.0884 788.8354 l
118.8364 788.8354 121.9517 786.2148 121.9517 782.9863 c
121.9517 758.2295 l
121.9517 755.0234 118.8364 752.4023 115.0884 752.4023 c
sU%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
